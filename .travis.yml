dist: trusty
sudo: required
language: bash
before_install:
# - curl https://raw.githubusercontent.com/express42/otus-homeworks/2020-02/run.sh |
#   bash
  - mkdir bin
install:
# Install packer
  - wget https://releases.hashicorp.com/packer/1.5.5/packer_1.5.5_linux_amd64.zip -O packer-bin.zip &&
    unzip packer-bin.zip -d bin/
# Install terraform
  - wget https://releases.hashicorp.com/terraform/0.12.24/terraform_0.12.24_linux_amd64.zip -O terraform-bin.zip &&
    unzip terraform-bin.zip -d bin/
  # Install tflint
  - wget https://github.com/terraform-linters/tflint/releases/download/v0.15.4/tflint_linux_amd64.zip -O tflint-bin.zip &&
    unzip tflint-bin.zip -d bin/
  # Install ansible
  - sudo pip install --upgrade pip && pip install ansible-lint

before_script:
  # Create fake variables files
  - cp packer/variables.json{.example,}
  - cp terraform/terraform.tfvars{.example,}
  - cp terraform/stage/terraform.tfvars{.example,}
  - cp terraform/prod/terraform.tfvars{.example,}

  # init terraform
  - cd terraform && ../bin/terraform init -backend=false
  - cd ./prod && ../../bin/terraform init -backend=false
  - cd ../stage && ../../bin/terraform init -backend=false
  - cd ../../

script:
  # Validate packer
  - for template in db app immutable ubuntu16; do echo "Validating $template.json"; packer validate -var-file packer/variables.json packer/$template.json;done
  # Validate and tflint terraform
  - cd terraform && ../bin/terraform validate && ../bin/tflint
  - cd ./prod && ../../bin/terraform validate && ../../bin/tflint
  - cd ../stage && ../../bin/terraform validate && ../../bin/tflint
  - cd ../../
  # Valideate ansible linting
  - ansible-lint ansible/playbooks/*.yml --exclude=ansible/roles/jdauphant.nginx -x ANSIBLE0004




notifications:
  slack:
    rooms:
      secure: GT8dio/Eazz6CkDpvUHYiYwo1kBgTL4dY0TWVfrY2dsZQgjVgb8bWVzv19IWLOf4Mzs41bGSFIYzDE9eHvagQJgCXZVqZhCQ6dJc82Ap18zlm4CbO6XOJDG59q63uin98Q3tAfHKurVboZpVo0hJBUX4asEFNGVeFRobSmqoRg3rt7XahcsRWoPgP6/YPPjmz5zwSIhLH46078p/TF2cTqZ3nrXyJKAiBKgVpb0hRWk3u2SHdsPhMLca+d2bhpinmkIoxIX5HLik7PO/POtR2EFBhPmPJuDFNle5gZcL+F2rqGoQNjRbt+oEBqGAswKLWLMwyqsryanEV3D7Lc40B/Z6p4XL9DzRm5IrMhUoYmtAADaYIci2503UR0R63eqNUP4tvn3t90dQA4FKKbBu5xTs2YXYwb7xRRQ7X7jAnOybZWT8Vqa3qfeWN3HYidkcG14mOuevGU5u6r4Chv6IT/SyTJEP0a2GCpYsbW3wtYRD0FmxXpo0aKozj29JHgQbWn5DrZysXoyme5obxmAgtN+ifRUqR3MoZMnXuf02pqlqGgpVcP/EYflxVZrJhvTW9hmON5l5PxVc5I6LRStvRvkZllKfxKKQd9mhIVzSnx+WPv+/W/WLGsFbxqKU1Da+HnzT+RBAfllLr3KyoZwuoYfnXPn4/pMzJsvJQ/Xmuvo=
